version: "3"
services:
  db:
    image: db_image
    build: ./db
    volumes:
      - pg_logs:/var/log/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - DB_REPL_USER=${DB_REPL_USER}
      - DB_REPL_PASSWORD=${DB_REPL_PASSWORD}
      - DB_REPL_HOST=${DB_REPL_HOST}.my_network
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
    container_name: db_1
  db_repl:
    image: db_repl_image
    build: ./db_repl
    container_name: db_repl_1
    environment:
      - DB_HOST=${DB_HOST}.my_network
      - DB_PORT=${DB_PORT}
      - DB_REPL_HOST=${DB_REPL_HOST}
      - DB_REPL_PORT=${DB_REPL_PORT}
      - DB_REPL_USER=${DB_REPL_USER}
      - DB_REPL_PASSWORD=${DB_REPL_PASSWORD}

  bot:
    image: bot_image
    build:
        context: ./bot
    environment:
      - TOKEN=${TOKEN}
      - RM_HOST=${RM_HOST}
      - RM_PORT=${RM_PORT}
      - RM_USER=${RM_USER}
      - RM_PASSWORD=${RM_PASSWORD}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
    volumes:
      - pg_logs:/var/log/
    container_name: bot_1

volumes:
  pg_data:
  pg_logs:

networks:
  default:
    name: my_network
